{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["Header","styled","div","props","colored","AppHeader","liked","allPosts","SearchPanel","state","term","onUpdateSearch","bind","e","target","value","this","setState","className","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","onFilterSelect","clazz","filter","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","event","preventDefault","onAdd","App","data","deleteItem","addItem","onToggleSelector","maxId","index","findIndex","elem","before","slice","after","body","newItem","selector","old","newArr","console","log","items","length","indexOf","filteredData","Object","entries","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.173452e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div`\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    display: flex;\r\n    h1 {\r\n        font-size: 26px;\r\n        color: ${props => props.colored ? 'red' : 'black'};\r\n        :hover {\r\n            color: blue;\r\n        }\r\n    }\r\n    h2 {\r\n        font-size: 1.2rem;\r\n        color: grey;\r\n    }\r\n`\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return(\r\n        <Header colored>\r\n            <h1>Roman Arabchik</h1>\r\n            <h2> {allPosts} записей, из них понравилось {liked}</h2>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\nimport './search-panel.css'\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({term}) //term: term\r\n        this.props.onUpdateSearch(term)\r\n    }\r\n    render() {\r\n        return(\r\n            <input\r\n                className='form-control search-input'\r\n                type='text'\r\n                placeholder='Поиск по записям'\r\n                onChange={this.onUpdateSearch} \r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './post-status-filter.css'\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ]\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {onFilterSelect, filter} = this.props;\r\n            const active = filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button \r\n                    key={name} \r\n                    type='button' \r\n                    className={`btn ${clazz}`}\r\n                    onClick={() => onFilterSelect(name)}\r\n                >{label}</button>\r\n            )\r\n        })\r\n        return (\r\n            <div className='btn-group'>\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component{\r\n    \r\n    render () {\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, important, like}=this.props;\r\n\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n        if (important) {\r\n            classNames +=' important'\r\n        }\r\n        if (like) {\r\n            classNames +=' like'\r\n        }\r\n        return(\r\n            <div className={classNames}>\r\n                <span\r\n                className=\"app-list-item-label\"\r\n                onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className='d-flex justify-content-center align-items-center'>\r\n                    <button\r\n                        type='button'\r\n                        className='btn-star btn-sm'\r\n                        onClick={onToggleImportant}>\r\n                            <i className='fa fa-star'></i>\r\n                    </button>\r\n                    <button\r\n                        type='button'\r\n                        className='btn-trash btn-sm' \r\n                        onClick={onDelete}>\r\n                            <i className='fa fa-trash-o'></i>\r\n                    </button>\r\n                    <i className='fa fa-heart'></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    \r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './post-list.css'\r\nimport PostListItem from '../post-list-item/post-list-item';\r\n\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n    \r\n    const elements = posts.map((item) => {\r\n        const {id,...itemProps} = item; //выносим отдельно id\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <PostListItem \r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)} \r\n                    onToggleImportant={() => onToggleImportant(id, 'important')} \r\n                    onToggleLiked={() => onToggleLiked(id, 'like')} \r\n                /> \r\n                {/* label={item.label} */}   \r\n            </li>\r\n        ) \r\n    })\r\n\r\n    return(\r\n        <ul className='app-list list-group-item'>\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;\r\n\r\n","import React, {Component} from 'react';\r\nimport './post-add-form';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(event) {\r\n        this.setState({\r\n            text: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form \r\n                className='bottom=panel d-flex'\r\n                onSubmit={this.onSubmit}\r\n\r\n            >\r\n                <input\r\n                    type='text'\r\n                    placeholder='О чем вы думаете сейчас?'\r\n                    className='form-control new-post-label'\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text} //контролируемый элемент, стэйт очистили и инпут очистился\r\n                />\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-outline-secondary'\r\n                >Добавить</button>\r\n            </form>\r\n        )\r\n    }\r\n} \r\n\r\n","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\r\nimport PostList from '../post-list/post-list';\r\nimport PostAddForm from '../post-add-form/post-add-form';\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {label: 'Going to learn React', important: false, like: false, id: 1},\r\n                {label: 'That is so good', important: false, like: false, id: 2},\r\n                {label: 'I need a break...', important: false, like: false, id: 3}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        // this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        // this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onToggleSelector = this.onToggleSelector.bind(this);\r\n        // this.searchPost = this.searchPost.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n        this.maxId = 4;\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index+1);\r\n            const newArr = [...before,...after];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem ={\r\n            label: body,\r\n            important:false,\r\n            like:false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return{\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    \r\n    \r\n    onToggleSelector(id, selector) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old};\r\n            newItem[selector] = !old[selector];\r\n            //раскрываем все свойства old и меняем его своство important\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index+1)];\r\n            console.log(selector);\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    // onToggleLiked(id) {\r\n    //     this.setState(({data}) => {\r\n    //         const index = data.findIndex(elem => elem.id === id);\r\n\r\n    //         const old = data[index];\r\n    //         const newItem = {...old, like: !old.like};\r\n    //         //раскрываем все свойства old и меняем его своство like\r\n    //         const newArr = [...data.slice(0, index), newItem, ...data.slice(index+1)];\r\n            \r\n    //         return {\r\n    //             data: newArr\r\n    //         }\r\n    //     })\r\n\r\n    // }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter( (item) => {\r\n            return item.label.indexOf(term) > -1\r\n            // если не нашло, то выдаст -1\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term})\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter}) \r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n        //чтобы не записывать ниже  this.state.data, а просто data\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const filteredData = this.state.data.filter(item => {\r\n            return typeof(item) == 'object' && Object.entries(item).length > 0;\r\n        })\r\n\r\n        const visiblePosts = this.filterPost(this.searchPost(filteredData, term), filter);\r\n        return (\r\n            <div className='app'>\r\n                <AppHeader\r\n                    liked={liked}\r\n                    allPosts={allPosts}\r\n                />\r\n                <div className='search-panel d-flex'>\r\n                    <SearchPanel\r\n                        onUpdateSearch={this.onUpdateSearch}\r\n                    />\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}\r\n                    />\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleSelector}\r\n                    onToggleLiked={this.onToggleSelector}\r\n                />\r\n                <PostAddForm\r\n                    onAdd={this.addItem}   \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\n\n// import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}